server:
  port: 9110 # 服务端口
spring:
  profiles:
    active: dev # 环境设置
  application:
    name: infrastructure-apigateway # 服务名
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848  # nacos服务地址
    gateway:
      routes:
        - id: service-edu #随便取的名字
          predicates: #拦截路径规则
            - Path=/*/edu/**,/user/**
          uri: lb://service-edu    #请求转发的路径拼接上上面的拦截规则 这里使用了nacos注册名对应的路径
        - id: service-ucenter
          uri: lb://service-ucenter
          predicates:
            - Path=/*/ucenter/**
        - id: service-oss
          uri: lb://service-oss
          predicates:
            - Path=/*/oss/**
        - id: service-vod
          uri: lb://service-vod
          predicates:
            - Path=/*/vod/**
        - id: service-cms
          uri: lb://service-cms
          predicates:
            - Path=/*/cms/**
        - id: service-sms
          uri: lb://service-sms
          predicates:
            - Path=/*/sms/**
        - id: service-trade
          uri: lb://service-trade
          predicates:
            - Path=/*/trade/**
        - id: service-statistics
          uri: lb://service-statistics
          predicates:
            - Path=/*/statistics/**
#      discovery:
#        locator:
#          enabled: true # gateway可以发现nacos中的微服务，并自动生成转发路由   这种方式不友好,路径太长,我们使用手动路由配置nacos的注册名